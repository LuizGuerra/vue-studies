{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"button\", {\n    style: _normalizeStyle({\n      background: _ctx.color\n    }),\n    class: \"btn\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.onClick())\n  }, _toDisplayString(_ctx.text), 5\n  /* TEXT, STYLE */\n  );\n}","map":{"version":3,"mappings":";;uBACEA,oBAKS,QALT,EAKS;IAJNC,KAAK;MAAAC,YAAeC;IAAf,EAIC;IAHPC,KAAK,EAAC,KAGC;IAFNC,OAAK,sCAAEF,cAAF;EAEC,CALT,mBAIKA,UAJL,EAIS;EAAA;EAJT","names":["_createElementBlock","style","background","_ctx","class","onClick"],"sourceRoot":"","sources":["/Users/luizpedrofranciscattoguerra/Lupe/Projects/Vue Tutorial/faraday-tutorial/vue-tutorial/src/components/Button.vue"],"sourcesContent":["<template>\n  <button \n    :style=\"{background: color}\" \n    class=\"btn\"\n    @click=\"onClick()\">\n    {{ text }}\n  </button>\n</template>\n\n<script>\nexport default {\n  name: 'Button',\n  props: {\n    text: String,\n    color: String\n  }\n  methods: {\n    onClick() => {\n      \n    }\n  }\n}\n</script>\n\n"]},"metadata":{},"sourceType":"module"}